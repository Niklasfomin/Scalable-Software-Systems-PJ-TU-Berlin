- name: Setup HammerDB Server
  hosts: hammerdb
  become: yes
  tasks:

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install dialog
      apt:
        name: dialog
        state: present

    - name: Download and install HammerDB
      get_url:
        url: https://github.com/TPC-Council/HammerDB/releases/download/v4.9/HammerDB-4.9-Linux.tar.gz
        dest: /tmp/hammerdb.tar.gz

    - name: Extract HammerDB package
      unarchive:
        src: /tmp/hammerdb.tar.gz
        dest: /opt/
        remote_src: yes
  
    - name: Copy scripts to VM1
      copy:
        src: "{{ playbook_dir }}/Scripts/{{ item }}"
        dest: /opt/
        mode: '0755'
      with_items:
        - "run_results.sh"
        
    - name: Copy adjusted hammerDB files to VM1
      copy:
        src: "{{ playbook_dir }}/Scripts/{{ item }}"
        dest: /opt/HammerDB-4.9/scripts/tcl/postgres/tprocc
      with_items:
        - "pg_tprocc_run_new.tcl"
        - "run_benchmark.sh"
        - "wizard.sh"

    - name: Copy adjusted hammerDB timeprofile module to VM1
      copy:
        src: "{{ playbook_dir }}/Scripts/{{ item }}"
        dest: /opt/HammerDB-4.9/modules
      with_items:
        - "etprof-1.1.tm"
        
    - name: Copy adjusted hammerDB files to VM1
      copy:
        src: "{{ playbook_dir }}/Scripts/{{ item }}"
        dest: /opt/HammerDB-4.9/modules
      with_items:
        - "etprof-1.1.tm"

    - name: Pass the SUT IP Adress to the hammerdb Host
      copy:
        content: "{{ postgres_ip }}"
        dest: "/opt/postgres_server_ip.txt"

    - name: Install PostgreSQL client
      apt:
        name: postgresql-client
        state: present
        update_cache: yes

    - name: Delete pg_tprocc.sh script
      file:
        path: /opt/HammerDB-4.9/scripts/tcl/postgres/tprocc/pg_tprocc.sh
        state: absent

    - name: Delete pg_tprocc_run.tcl script
      file:
        path: /opt/HammerDB-4.9/scripts/tcl/postgres/tprocc/pg_tprocc_run.tcl
        state: absent

- name: Setup Postgres Server with Docker, LXC and Golang env
  hosts: postgres
  become: yes
  tasks:
    - name: Install Docker
      apt:
        name: docker.io
        state: present
        update_cache: yes

    - name: Install LXC
      apt:
        name: lxc
        state: present

    - name: Install qemu-kvm
      apt:
        name: qemu-kvm
        state: present

    - name: Install Golang
      apt:
        name: golang
        state: present

    - name: Pass the Benchmark Server IP Adress to the SUT-Server
      copy:
        content: "{{ hammerDB_ip }}"
        dest: "/opt/hammerDB_server_ip.txt"

    - name: Pull latest PostgreSQL Docker image
      docker_image:
        name: postgres
        source: pull
        state: present

    - name: Copy Go program and setup scripts to VM2
      copy:
        src: "{{ playbook_dir }}/Scripts/{{ item }}"
        dest: /opt/
        mode: '0755'
      with_items:
        - "setup_docker_pg.sh"
        - "setup_lxc_pg.sh"
        - "run_interruptor.sh"
        - "resource_monitor.sh"
        - "cleanup.sh"
    
    - name: Copy interruptor application to SUT
      copy:
        src: "{{ playbook_dir }}/../InterruptorApplication/{{ item }}"
        dest: /opt/
        mode: '0755'
      with_items:
        - "exhaustor.go"
   

        